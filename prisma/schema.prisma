generator client {
  provider = "prisma-client-js"
  output   = "../lib/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Channel {
  id        String   @id @default(uuid())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Foreign keys(Kinde IDs)
  workspaceId String
  createdById String

  message Message[]

  @@unique([workspaceId, name])
}

model Message {
  id String @id @default(uuid())

  content  String
  imageUrl String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  authorId     String
  authorEmail  String
  authorName   String
  authorAvatar String

  Channel   Channel? @relation(fields: [channelId], references: [id], onDelete: Cascade)
  channelId String?


  // Thread relations
  parentMessage Message? @relation("MessageThread", fields: [threadId], references: [id], onDelete: Cascade)
  threadId String?
  replies Message[] @relation("MessageThread")

  MessageReaction MessageReaction[]
}

model MessageReaction {
  id String @id @default(uuid())

  emoji String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  //user data
  userId String
  userEmail String
  userName String
  userAvatar String

  Message Message @relation(fields: [messageId], references: [id], onDelete: Cascade)
  messageId String

  @@unique([messageId, userId, emoji])
}
